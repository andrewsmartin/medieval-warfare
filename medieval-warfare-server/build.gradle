buildscript {
	repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'spring-boot'
apply plugin: 'docker'

sourceSets {
    integTest {
        java.srcDir file('src/integration-test/java')
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
    
    // exclude commons-logging
    all*.exclude group: 'commons-logging'
    all*.exclude group: 'ch.qos.logback'
}

task integTest(type: Test, dependsOn: test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

check.dependsOn integTest

jar {
    baseName = 'medieval-warfare-server'
}

group = 'newworldorder'
mainClassName = 'newworldorder.server.ServerApplication'

distDocker {
    exposePort 5672
}

dependencies {
    compile 'org.slf4j:jcl-over-slf4j:1.7.10'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'org.slf4j:slf4j-log4j12:1.7.10'
    compile 'log4j:log4j:1.2.17'

    compile 'org.springframework:spring-context'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'com.opencsv:opencsv:3.3'
    compile project(':medieval-warfare-common')
    
    testCompile 'org.springframework:spring-test'
    testCompile "org.mockito:mockito-core:1.+"
}
